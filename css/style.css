/*Your Code Here*/
/* PLEASE DO NOT REMOVE MY COMMENTS.  THEY HELP US HELP YOU DEBUG.
*/

/* Step 1: Write selector/rule property to add an underline when
links in the navigation are in the hover or focus state.*/

a:focus, a:hover {
     text-decoration: underline; /* Underline nav links on hover or focus */
 }

/* Step 2a: Write selector/rule property to position the default position for the skip class element*/
.skip a {
     position: absolute;
     top: -40px;
 
 }

/* Step 2b: Write selector/rule property to position the skip class element when it is in focus*/
.skip a:focus {
     position: absolute;
     top: 20px; /* Make the skip link visible on focus */
 }

/* Step 3: Write selector/rule property to style all elements when in focus*/

*:focus {
     outline: 2px solid black; /* Default focus border style */
 }

/* Step 4: Write selector/rule property to style the container */
.container {
     display: grid;
     grid-template-columns: 1fr 5fr 1fr;
     row-gap: 15px; /* Gap between rows  ask about this section. it only specifies that there is this gap but the screenshot shows it for both column and row*/
     column-gap: 15px;
 }
 

/* Step 5: Write selector/rule property to add the background image to the 
first div in the grid  and place it in the grid. */

.container .overview{
     grid-column: 1 / -1; /* Span all columns */
     background-image: url("../images/header.jpg");
     background-position: center;
     background-repeat: no-repeat;
     background-size: cover;
     background-attachment: fixed; /* Parallax effect */

 }

/* Steps 6 and 7: Write the selector/rule properties to add place the next elements in the next
 four rows in the grid. */

      /*This will be a lot of rules.... but be strategic and combine seletors*/

      .about {
          grid-column: 2/ span 1;
          grid-row: 2 / span 1;
      }
      
      .method {
          grid-column: 2 /span 1;
          grid-row: 3 / span 1;
      }
      
      .clients {
          grid-column: 2 /span 1;
          grid-row: 4 / span 1;
      }
      
      .contact {
          grid-column: 2 /span 1;
          grid-row: 5 / span 1;
      }

      .about-image {
     grid-column: 1 / -1;
     grid-row: 2;
     max-height: 600px;
     overflow: hidden;
      }
 
      .method-image {
     grid-column: 1 / -1;
     grid-row: 3;
     max-height: 600px;
     overflow: hidden;
      }
 
      .clients-image {
     grid-column: 1 / -1;
     grid-row: 4;
     max-height: 600px;
     overflow: hidden;
     }
 
 .contact-image {
     grid-column: 1 / -1;
     grid-row: 5;
     max-height: 600px;
     overflow: hidden;
 }
 


 /* Step 8: Write the selector/rule property to style the .text-block class. */

 .text-block {
     text-align: center;
     align-self: center;

  
    /*  
     justify-content: center;
     justify-items: center;
    overflow:scroll; not the correct overflow setting considering 700px*/
    /*  margin-top: 15%; fixes the not in the center offset when 900px*/
 }
 

 
/* Add your media query here */

@media screen and (min-width: 800px) {
  /* Step 9: Write the selector/rule property to style the nav element */
  nav {
    text-align:right !important;
    padding: 30px 0px;
 }
 
  /* Step 10: Write the selector/rule property to update the .container class */
  .container {
     display:grid;
     grid-template-columns: 50px auto 500px auto 50px;
 }

  /* Steps 11 and 12: Update the grid-column property of the grid's children (where-needed)*/
  .about,
  .clients,
  .method-image,
  .contact-image {
      grid-column: 3 / span 2;
  }
  .method,
  .contact,
  .about-image,
  .clients-image {
      grid-column: 2 / span 2;
  }


 /* Step 13:Write the selector/rule property to update the .text-block class */
 .text-block {
     max-height: 250px;
     overflow: auto; /* Ensures content is scrollable if it exceeds height */
 }
}
